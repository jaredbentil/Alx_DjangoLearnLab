"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- CORE SETTINGS ---
# ----------------------------------------------------------------------

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$t@i_$n7&0%ql(^dx#3=x$#r^d=dj51(&7ut824_0d0p%76w!n'

# SECURITY WARNING: don't run with debug turned on in production!
# Set to False in production to prevent exposure of sensitive information.
DEBUG = True

ALLOWED_HOSTS = []

# --- APPLICATION DEFINITION ---
# ----------------------------------------------------------------------

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'relationship_app',
    'csp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'

# --- DATABASE ---
# ----------------------------------------------------------------------

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# --- PASSWORD VALIDATION ---
# ----------------------------------------------------------------------

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# --- INTERNATIONALIZATION ---
# ----------------------------------------------------------------------

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# --- STATIC FILES ---
# ----------------------------------------------------------------------

STATIC_URL = 'static/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- AUTHENTICATION ---
# ----------------------------------------------------------------------

LOGIN_REDIRECT_URL = "list_books"
LOGOUT_REDIRECT_URL = "login"
AUTH_USER_MODEL = 'bookshelf.CustomUser'

# --- SECURITY CONFIGURATIONS ---
# ----------------------------------------------------------------------

# NOTE: For production, set DEBUG = False in the core settings above.

# Redirects all non-HTTPS requests to HTTPS
SECURE_SSL_REDIRECT = True

# Enforces HSTS for one year (31536000 seconds)
# This instructs the browser to always use HTTPS for future requests.
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Ensures session and CSRF cookies are only sent over HTTPS
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Prevents the site from being embedded in a frame, protecting against clickjacking
X_FRAME_OPTIONS = 'DENY'

# Prevents browsers from MIME-sniffing content
SECURE_CONTENT_TYPE_NOSNIFF = True

# Enables the browser's built-in XSS filter
SECURE_BROWSER_XSS_FILTER = True

# Content Security Policy (CSP) headers
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'",)
CSP_IMG_SRC = ("'self'", 'data:')